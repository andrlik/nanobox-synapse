run.config:
  engine: python
  engine.config:
    runtime: python-2.7
    
  extra_packages:
    - sqlite3
    - libffi
    - libjpeg-turbo
    - libxslt
    - nginx
    - py27-psycopg2
    - gnu-crypto
    - libevent

  extra_steps:
    - pip install --upgrade pip
    - pip install --upgrade setuptools
    - pip install https://github.com/matrix-org/synapse/tarball/master
    - PREFIX=/data BINDIR=/data/bin CONFDIR=/app/etc /app/install_coturn.sh
 
web.site:
  start:
    turnserver: turnserver
    synapse: python -m synapse.app.homeserver -c /app/etc/homeserver.yaml
    nginx: nginx -c /app/etc/nginx.conf
  stop:
    synapse: synctl stop /app/etc/homeserver.yaml
    turnserver: kill $(cat /app/run/turnserver.pid)
    nginx: nginx -c /app/etc/nginx.conf -s stop
  stop_force:
    synapse: true
    turnserver: true
    nginx: true
  stop_timeout:
    synapse: 60
    nginx: 60
    turnserver: 10

  network_dirs:
    data.uploads:
      - uploads
    data.mediastore:
      - media_store
  writable_dirs:
    - logs
    - run
  log_watch:
    synapse: 'logs/homeserver.log'
    nginx: 'logs/nginx_error.log'
    turnserver: 'logs/turnserver.log'
  ports:
    - udp:3478:3478
    - tcp:3478:3478
    - tcp:8448:8448

deploy.config:
  transform:
    - 'sed -i s/HOST/$DATA_DB_HOST/g etc/homeserver.yaml'
    - 'sed -i s/DB_USER/$DATA_DB_USER/g etc/homeserver.yaml'
    - 'sed -i s/DB_PASSWORD/$DATA_DB_PASS/g etc/homeserver.yaml'
    - 'sed -i s/REGISTRATION_SHARED_SECRET/$REGISTRATION_SECRET/g etc/homeserver.yaml'
    - 'sed -i s/YOUR_SHARED_SECRET/$TURN_SECRET_KEY/g etc/homeserver.yaml'
    - 'sed -i s/YOUR_SHARED_SECRET/$TURN_SECRET_KEY/g etc/turnserver.conf'
    - 'sed -i s/YOUR_TURN_REALM/$TURN_REALM/g etc/turnserver.conf'
    - 'sed -i s/YOUR_TURN_REALM/$TURN_REALM/g etc/homeserver.yaml'
    
data.db:
  image: nanobox/postgresql:10-beta

  extra_packages:
    - py27-awscli

  cron:
    - id: backup
      schedule: '0 3 * * *'
      command: |
        date=$(date -u +%Y-%m-%d.%H-%M-%S)
        (
          PGPASSWORD=${DATA_DB_PASS} pg_dump -w -Fc -O -U ${DATA_DB_USER} gonano |
          gzip |
          tee >(cat - >&4) |
          curl -k -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/backup-${HOSTNAME}-${date}.sql.gz -X POST -T - >&2
        ) 4>&1 |
        aws s3 cp - s3://${AWS_S3_BACKUP_BUCKET}/${APP_NAME}-backup-${HOSTNAME}-${date}.sql.gz
        curl -k -s -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/ |
        sed 's/,/\n/g' |
        grep ${HOSTNAME} |
        sort |
        head -n-${BACKUP_COUNT:-1} |
        sed 's/.*: \?"(.*\)".*/\1/' |
        while read file
        do
          curl -k -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/${file} -X DELETE
          aws s3 rm s3://${AWS_S3_BACKUP_BUCKET}/${APP_NAME}-${file}
        done
      

data.uploads:
  image: nanobox/unfs:0.9

  extra_packages:
    - py27-awscli

  cron:
    - id: backup
      schedule: '0 3 * * *'
      command: |
        date=$(date -u +%Y-%m-%d.%H-%M-%S)
        (
          tar cz -C /data/var/db/unfs/ . |
          tee >(cat - >&4) |
          curl -k -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/backup-${HOSTNAME}-${date}.tgz -X POST -T - >&2
        ) 4>&1 |
        aws s3 cp - s3://${AWS_S3_BACKUP_BUCKET}/${APP_NAME}-backup-${HOSTNAME}-${date}.tgz
        curl -k -s -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/ |
        sed 's/,/\n/g' |
        grep ${HOSTNAME} |
        sort |
        head -n-${BACKUP_COUNT:-1} |
        sed 's/.*: \?"\(.*\)".*/\1/' |
        while read file
        do
          curl -k -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/${file} -X DELETE
          aws s3 rm s3://${AWS_S3_BACKUP_BUCKET}/${APP_NAME}-${file}
        done

data.mediastore:
  image: nanobox/unfs:0.9

  extra_packages:
    - py27-awscli

  cron:
    - id: backup
      schedule: '0 3 * * *'
      command: |
        date=$(date -u +%Y-%m-%d.%H-%M-%S)
        (
          tar cz -C /data/var/db/unfs/ . |
          tee >(cat - >&4) |
          curl -k -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/backup-${HOSTNAME}-${date}.tgz -X POST -T - >&2
        ) 4>&1 |
        aws s3 cp - s3://${AWS_S3_BACKUP_BUCKET}/${APP_NAME}-backup-${HOSTNAME}-${date}.tgz
        curl -k -s -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/ |
        sed 's/,/\n/g' |
        grep ${HOSTNAME} |
        sort |
        head -n-${BACKUP_COUNT:-1} |
        sed 's/.*: \?"\(.*\)".*/\1/' |
        while read file
        do
          curl -k -H "X-AUTH-TOKEN: ${WAREHOUSE_DATA_HOARDER_TOKEN}" https://${WAREHOUSE_DATA_HOARDER_HOST}:7410/blobs/${file} -X DELETE
          aws s3 rm s3://${AWS_S3_BACKUP_BUCKET}/${APP_NAME}-${file}
        done
